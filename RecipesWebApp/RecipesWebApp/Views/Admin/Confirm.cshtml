@using RecipesWebApp.Models

@model RecipeViewModel

@{
    ViewBag.Title = "Потвърждаване на рецепти";
}

<h2>Потвърждаване на рецепти</h2>
<div class="row">
    <div class="col-md-8 col-md-offset-2">

        @using (Html.BeginForm("Confirm", "Admin", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form", style = "30px" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                <div class="col-md-3 labels">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label  label-create-form" })
                </div>
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control input-group-lg", @style = "width: 100%", placeholder = "Име на рецепта" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-3 labels">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label label-create-form" })
                </div>
                <div class="col-md-9">
                    
                   
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class="form-control", @rows = 15 } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-3 labels">
                    @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label label-create-form" })
                </div>
                <div class="col-md-9">
                    @Html.DropDownListFor(model => model.Type,
            new List<SelectListItem>
                {
                new SelectListItem {Text = "Предястие", Value="Предястие" },
                new SelectListItem {Text = "Основно ястие", Value="Основно ястие" },
                new SelectListItem {Text = "Десерт", Value="Десерт" } }, "--Избери категория--", new { @class = "form-control input-group-lg text-center", @style = "text-align: center" })
                    @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger", @style = "width: 500px" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-3 labels">
                    @Html.LabelFor(model => model.Products, htmlAttributes: new { @class = "control-label label-create-form" })
                </div>
                <div class="col-md-9">
                    <div style="width:100%; border: 1px solid #cccccc; border-radius: 5px; overflow-y: scroll; height:110px; background-color:white">

                        @for (int i = 0; i < Model.Products.Count(); i++)
                        {
                            <div class="checkbox">
                                @Html.HiddenFor(model => model.Products[i].Text)
                                @Html.HiddenFor(model => model.Products[i].Value)
                                @*@Html.CheckBoxFor(model => model.Products[i].Selected)*@
                                <span>@Html.DisplayFor(model => model.Products[i].Text)</span>
                            </div>
                        }
                    </div>
                    @*@Html.ValidationMessageFor(model => model.SelectProducts, "", new { @class = "text-danger", @style = "width: 500px background-color:white" })*@
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-3 labels">
                    @Html.LabelFor(model => model.ProductsConfirm, htmlAttributes: new { @class = "control-label label-create-form", @style = "display: inline-block; text-align: right" })
                </div>
                <div class="col-md-9">
                    <div style="width:100%; border: 1px solid #cccccc; border-radius: 5px; overflow-y: scroll; height:110px">
                        @for (int i = 0; i < Model.ProductsConfirm.Count(); i++)
                        {
                            <div class="checkbox">
                                @Html.HiddenFor(model => model.ProductsConfirm[i].Text)
                                @Html.HiddenFor(model => model.ProductsConfirm[i].Value)
                                @*@Html.CheckBoxFor(model => model.ProductsConfirm[i].Selected)*@
                                <span>@Html.DisplayFor(model => model.ProductsConfirm[i].Text)</span>
                            </div>
                        }
                    </div>
                </div>
                @Html.HiddenFor(model => model.AuthorId)
            </div>
            if (Model.Image != null)
            {
                <div class="form-group">
                    <div class="col-md-3 labels">
                        @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label label-create-form", @style = "display: inline-block; text-align: right" })
                    </div>
                    <div class="col-md-9">
                        <img src="data:image;base64,@System.Convert.ToBase64String(Model.Image)" class="img-responsive" />
                        <input type="hidden" name="ChoosenFile" value="data:image;base64,@System.Convert.ToBase64String(Model.Image)" />
                    </div>
                </div>
            }

            <div class="form-group ">
                <div class="col-md-offset-2 col-md-10 ">
                    <input type="submit" value="Одобри" class="btn btn-success pull-right" />
                </div>
            </div>

        }
        <div>
            @Html.ActionLink("Изтрий", "Index", null, new { @class = "btn btn-default pull-right" })
            <br />
            <br />
        </div>
    </div>
</div>

