
@using RecipesWebApp.Models
@model RecipeInputViewModel
@{
    ViewBag.Title = "Create";
}
<h2 class="text-center">ДОБАВИ РЕЦЕПТА</h2>
<div class="container" style="background-image:url('../../Images/meals.jpg')">
    <div class="row">
        <div class="col-md-8 col-md-offset-2">argin-top: 3
            @using (Html.BeginForm("Create", "Recipe", FormMethod.Post, new { enctype = "multipart/form-data" ,  @class = "form-horizontal", role = "form" , style="30px" } ))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
               
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        <div class="col-md-3 labels">
                            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label  label-create-form" })
                        </div>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control input-group-lg", @style = "width: 100%", placeholder = "Име на рецепта" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3 labels">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label label-create-form" })
                        </div>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @rows = 15 } });
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3 labels">
                            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label label-create-form" })
                        </div>
                        <div class="col-md-9">
                            @Html.DropDownListFor(model => model.Type,
                            new List<SelectListItem> {
                                new SelectListItem {Text = "Предястие", Value="Предястие" },
                                new SelectListItem {Text = "Основно ястие", Value="Основно ястие" },
                                new SelectListItem {Text = "Десерт", Value="Десерт" } }, "--Избери категория--",  new { @class = "form-control input-group-lg text-center", @style = "text-align: center" })
                            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger", @style = "width: 500px" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3 labels">
                            @Html.LabelFor(model => model.SelectProducts, htmlAttributes: new { @class = "control-label label-create-form" })
                        </div>
                        <div class="col-md-9">
                            <div style="width:100%; border: 1px solid #cccccc; border-radius: 5px; overflow-y: scroll; height:110px; background-color:white">
                                @for (int i = 0; i < Model.SelectProducts.Count(); i++)
                                {

                                    <div class="checkbox" style="padding-left:30px">
                                        @Html.HiddenFor(model => model.SelectProducts[i].Value)
                                        @Html.HiddenFor(model => model.SelectProducts[i].Text)
                                        @Html.CheckBoxFor(model => model.SelectProducts[i].Selected)
                                        <span>@Html.DisplayFor(model => model.SelectProducts[i].Text)</span>
                                    </div>
                                }
                            </div>
                            @Html.ValidationMessageFor(model => model.SelectProducts, "", new { @class = "text-danger", @style = "width: 500px background-color:white" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3 labelsDeffected">
                            @Html.Label("Въведи нов продукт")
                        </div>
                        <div class="col-md-9">
                            <div class="input-group">
                                @Html.TextBox("ProductName", null, new { @id = "productText", @class = "form-control", @style = "width: 100%", placeholder = "Въведи нов продукт" })
                                <span class="input-group-btn">
                                    <button onclick="addItem()" id="addProduct" type="button" class="btn btn-default">Добави</button>
                                </span>
                            </div>
                            <div col-md-offset-2">
                                <ul id="productsList" style="background-color:white"></ul>
                            </div>
                        </div>
                    </div>
                    @Html.HiddenFor(x => x.newProduct, new { @id = "newProducts" })
                    <div class="form-group">
                        <div class="col-md-3 labelsDeffected">
                            @Html.Label("Избери снимка") 
                        </div>
                        <div class="col-md-9">
                            <input type="file" id="asd" name="ChoosenFile" />
                        </div>
                    </div>


                    <div class="form-group ">
                        <div class="col-md-offset-2 col-md-10 ">
                           
                            <input type="submit" value="Създаване" class="btn btn-success pull-right" />
                        </div>
                    </div>
               
            }
            <div>
                @Html.ActionLink("Обратно към категории", "Index", null, new {@class="btn btn-default pull-right" })
                <br />
                <br/>
            </div>
        </div>
    </div>
</div>
<script>
    function addItem() {
        let text = $('#productText').val();
        addItemToLIst(text);
        $('#productText').val('');
        let input = $('#newProducts')
        input.val(input.val() + text + '&');
    }
    function addItemToLIst(text) {
        let li = $('<li>')
        .append($("<span>").text(text));
        $('#productsList').append(li);
    }
</script>
