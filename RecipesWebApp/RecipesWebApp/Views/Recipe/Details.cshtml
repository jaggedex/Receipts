@model RecipesWebApp.Models.RecipeInputViewModel

@{
    ViewBag.Title = "Детайли";
}

<h2 class="text-center">ОПИСАНИЕ НА РЕЦЕПТАТА</h2>

<div class="container well" style="background-image: url('/Images/details-large-background.jpg'); background-repeat:repeat-y ">
    <div class="row">
        <div class="col-md-6">
            <dl class="dl-horizontal">

                <dt>
                    @Html.DisplayNameFor(model => model.Title)
                </dt>

                <dd>
                    <strong>@Html.DisplayFor(model => model.Title)</strong>
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Products)
                </dt>

                <dd>
                    @{
                        var products = new List<string>();
                        foreach (var item in Model.Products)
                        {
                            products.Add(item.ProductName);
                        }
                        products.Sort();
                    }
                    <strong>@string.Join(", ", products)</strong>

                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Type)
                </dt>

                <dd>
                    <strong>@Html.DisplayFor(model => model.Type)</strong>
                </dd>
                <dt>

                    @Html.DisplayNameFor(model => model.Description)
                </dt>

                <dd>
                    @*<div class="col-md-8">

                            @Html.Raw(Model.Description)
                        </div>*@
                    @*<textarea id="textAreaAwsome"></textarea>*@
                    <strong>@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @disabled = "false", @rows = "18" } })</strong>
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Date)
                </dt>

                <dd>
                    <strong>@Html.DisplayFor(model => model.Date)</strong>
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.User)
                </dt>

                <dd>
                    <strong>@Html.DisplayFor(model => model.User)</strong>
                </dd>
                <dt>
                    @Html.DisplayNameFor(x => x.Rating)
                </dt>
                <dd>
                    @{
                        bool isAuthor = false;
                    }
                    @foreach (var item in Model.Ratings)
                    {
                        if (item.AuthorId == Model.CurrentUserId)
                        {
                            isAuthor = true;
                            break;
                        }
                    }
                    @if (!isAuthor && Model.CurrentUserId != null)
                    {
                        using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()
                            <div class="col-md-12 input-group" style="padding-left: 0px">
                                <div class="col-md-9" style="margin-left: 0px;padding-left: 0px">
                                    @Html.DropDownListFor(model => model.Rating,
                                new List<SelectListItem> {
                                new SelectListItem {Text = "Отлично", Value="5" },
                                new SelectListItem {Text = "Добро", Value="4" },
                                new SelectListItem {Text = "Средно", Value="3" },
                                new SelectListItem {Text = "Слабо", Value="2" },
                                new SelectListItem {Text = "Много слабо", Value="1" }}, "--Избери оценка--",
                                new { @class = "form-control", @style = "padding-left: 0px" })
                                </div>
                                <div class="col-md-3">
                                    <input type="submit" value="Оцени" class="btn btn-default pull-right" />
                                </div>
                                @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger", @style = "width: 500px" })

                            </div>

                        }
                    }
                    else
                    {
                        var TotalVotedSum = 0D;
                        foreach (var item in Model.Ratings)
                        {
                            TotalVotedSum += item.Vote;
                        }
                        var vote = Math.Round(TotalVotedSum / Model.Ratings.Count(), 1);
                        if (TotalVotedSum != 0D)
                        {
                            <strong><text>@vote<span>/5</span></text></strong>
                        }
                        else
                        {
                            <strong><text>0/5</text></strong>
                        }

                    }
                </dd>

            </dl>
        </div>

        <div class="col-md-6" style="vertical-align: middle">
            @if (Model.Image != null)
            {

                @*@Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2 label-create-form", @style = "display: inline-block; text-align: right" })*@
                @*<div class="col-md-6">*@
                <div class="img-thumbnail">
                    <img src="data:image;base64,@System.Convert.ToBase64String(Model.Image)" class="img-responsive" />
                </div>


                @*</div>*@
            }



        </div>
    </div>
</div>
    <div class="coll-md-12">
        <h3 class="text-center lead">КОМЕНТАРИ</h3>
        @foreach (var comment in Model.Comments)
        {

            <div class="col-md-12 well" id="commentToEdit">
                <div>
                    <div class="comment-bottom-border lead">
                        @comment.Text
                    </div>
                    @*<hr style="height: 2px; color:#000000"/>*@
                    <span class="pull-left">@comment.Date</span>
                    <span class="pull-right">Автор: @comment.AuthorName</span>
                </div>
                <br />
                <div style="margin-top: 5px">
                    @Ajax.ActionLink("Промени", "CommentToEdit", "Recipe", new { id = comment.ID, recipeId = Model.Id }, new AjaxOptions
           {
               InsertionMode = InsertionMode.Replace,
               UpdateTargetId = "commentToEdit"
           }, new { @class = "btn btn-primary btn-sm" })

                    @Html.ActionLink("Изтрий", "CommentToDelete", "Recipe", new { id = comment.ID, recipeId = Model.Id }, new { @class = "btn btn-danger btn-sm" })
                </div>

            </div>

            <br />
        }
    
</div>
    <div>
        <div id="comment">
            @Ajax.ActionLink("Добави коментар", "AddComment", "Recipe", new { id = Model.Id }, new AjaxOptions
   {
       InsertionMode = InsertionMode.Replace,
       UpdateTargetId = "comment"
   }, new { @class = "btn btn-success" })
        </div>
        <div style="margin-top: 5px">
            @{
                string actionName = "";
            }
            @if (Model.Type == "Предястие")
            {
                actionName = "/ListAppetizers";
            }
            else if (Model.Type == "Основно ястие")
            {
                actionName = "/ListMainDishes";
            }
            else if (Model.Type == "Десерт")
            {
                actionName = "/ListDesserts";
            }
            <a href="@Url.Action(actionName)" class="btn btn-default">
                <span class="glyphicon glyphicon-arrow-left"></span>
                Обратно в @Model.Type.ToLower()
            </a>
        </div>
    
</div>

@section scripts {
    @Scripts.Render("~/bundles/ajax")
}